# Alternative GNU Make project makefile autogenerated by Premake

ifndef config
  config=debug
endif

ifndef verbose
  SILENT = @
endif

.PHONY: clean prebuild

SHELLTYPE := posix
ifeq (.exe,$(findstring .exe,$(ComSpec)))
	SHELLTYPE := msdos
endif

# Configurations
# #############################################

RESCOMP = windres
INCLUDES += -I. -isystem ../Deps/stb -isystem ../Deps/Math/include -isystem ../Deps/glad/include -isystem ../Deps/glfw/include -isystem ../Deps/assimp/include -isystem ../Deps/Vulkan-Headers/include -isystem ../Deps/meshoptimizer/src
FORCE_INCLUDE +=
ALL_CPPFLAGS += $(CPPFLAGS) -MMD -MP $(DEFINES) $(INCLUDES)
ALL_RESFLAGS += $(RESFLAGS) $(DEFINES) $(INCLUDES)
LINKCMD = $(AR) -rcs "$@" $(OBJECTS)
define PREBUILDCMDS
endef
define PRELINKCMDS
endef
define POSTBUILDCMDS
endef

ifeq ($(config),debug)
TARGETDIR = ../build/linux-x86_64-Debug/Graphics/lib
TARGET = $(TARGETDIR)/libGraphics.a
OBJDIR = ../build/linux-x86_64-Debug/Graphics/obj
DEFINES += -DDEBUG -D_CRT_SECURE_NO_WARNINGS
ALL_CFLAGS += $(CFLAGS) $(ALL_CPPFLAGS) -m64 -g -fopenmp
ALL_CXXFLAGS += $(CXXFLAGS) $(ALL_CPPFLAGS) -m64 -g -std=c++20 -fopenmp
LIBS += ../build/linux-x86_64-Debug/glad/lib/libglad.a ../build/linux-x86_64-Debug/glfw/lib/libglfw.a ../build/linux-x86_64-Debug/assimp/lib/libassimp.a ../build/linux-x86_64-Debug/meshoptimizer/lib/libmeshoptimizer.a
LDDEPS += ../build/linux-x86_64-Debug/glad/lib/libglad.a ../build/linux-x86_64-Debug/glfw/lib/libglfw.a ../build/linux-x86_64-Debug/assimp/lib/libassimp.a ../build/linux-x86_64-Debug/meshoptimizer/lib/libmeshoptimizer.a
ALL_LDFLAGS += $(LDFLAGS) -L/usr/lib64 -m64 -pthread

else ifeq ($(config),release)
TARGETDIR = ../build/linux-x86_64-Release/Graphics/lib
TARGET = $(TARGETDIR)/libGraphics.a
OBJDIR = ../build/linux-x86_64-Release/Graphics/obj
DEFINES += -DNDEBUG -D_CRT_SECURE_NO_WARNINGS
ALL_CFLAGS += $(CFLAGS) $(ALL_CPPFLAGS) -m64 -O2 -fopenmp
ALL_CXXFLAGS += $(CXXFLAGS) $(ALL_CPPFLAGS) -m64 -O2 -std=c++20 -fopenmp
LIBS += ../build/linux-x86_64-Release/glad/lib/libglad.a ../build/linux-x86_64-Release/glfw/lib/libglfw.a ../build/linux-x86_64-Release/assimp/lib/libassimp.a ../build/linux-x86_64-Release/meshoptimizer/lib/libmeshoptimizer.a
LDDEPS += ../build/linux-x86_64-Release/glad/lib/libglad.a ../build/linux-x86_64-Release/glfw/lib/libglfw.a ../build/linux-x86_64-Release/assimp/lib/libassimp.a ../build/linux-x86_64-Release/meshoptimizer/lib/libmeshoptimizer.a
ALL_LDFLAGS += $(LDFLAGS) -L/usr/lib64 -m64 -s -pthread

endif

# Per File Configurations
# #############################################


# File sets
# #############################################

GENERATED :=
OBJECTS :=

GENERATED += $(OBJDIR)/CommandBuffer.o
GENERATED += $(OBJDIR)/CommandQueue.o
GENERATED += $(OBJDIR)/DDSLoader.o
GENERATED += $(OBJDIR)/GLCheck.o
GENERATED += $(OBJDIR)/GLCommandBuffer.o
GENERATED += $(OBJDIR)/GLCommandQueue.o
GENERATED += $(OBJDIR)/GLIndexBuffer.o
GENERATED += $(OBJDIR)/GLProgram.o
GENERATED += $(OBJDIR)/GLRenderer.o
GENERATED += $(OBJDIR)/GLShader.o
GENERATED += $(OBJDIR)/GLTexture.o
GENERATED += $(OBJDIR)/GLVertexArray.o
GENERATED += $(OBJDIR)/GLVertexBuffer.o
GENERATED += $(OBJDIR)/Gamepad.o
GENERATED += $(OBJDIR)/Image.o
GENERATED += $(OBJDIR)/IndexBuffer.o
GENERATED += $(OBJDIR)/Input.o
GENERATED += $(OBJDIR)/Material.o
GENERATED += $(OBJDIR)/Mesh.o
GENERATED += $(OBJDIR)/Model.o
GENERATED += $(OBJDIR)/Monitor.o
GENERATED += $(OBJDIR)/Program.o
GENERATED += $(OBJDIR)/Renderer.o
GENERATED += $(OBJDIR)/Shader.o
GENERATED += $(OBJDIR)/Texture.o
GENERATED += $(OBJDIR)/VKCommandBuffer.o
GENERATED += $(OBJDIR)/VKCommandQueue.o
GENERATED += $(OBJDIR)/VKRenderer.o
GENERATED += $(OBJDIR)/VKShader.o
GENERATED += $(OBJDIR)/VertexBuffer.o
GENERATED += $(OBJDIR)/VertexFormat.o
GENERATED += $(OBJDIR)/Window.o
OBJECTS += $(OBJDIR)/CommandBuffer.o
OBJECTS += $(OBJDIR)/CommandQueue.o
OBJECTS += $(OBJDIR)/DDSLoader.o
OBJECTS += $(OBJDIR)/GLCheck.o
OBJECTS += $(OBJDIR)/GLCommandBuffer.o
OBJECTS += $(OBJDIR)/GLCommandQueue.o
OBJECTS += $(OBJDIR)/GLIndexBuffer.o
OBJECTS += $(OBJDIR)/GLProgram.o
OBJECTS += $(OBJDIR)/GLRenderer.o
OBJECTS += $(OBJDIR)/GLShader.o
OBJECTS += $(OBJDIR)/GLTexture.o
OBJECTS += $(OBJDIR)/GLVertexArray.o
OBJECTS += $(OBJDIR)/GLVertexBuffer.o
OBJECTS += $(OBJDIR)/Gamepad.o
OBJECTS += $(OBJDIR)/Image.o
OBJECTS += $(OBJDIR)/IndexBuffer.o
OBJECTS += $(OBJDIR)/Input.o
OBJECTS += $(OBJDIR)/Material.o
OBJECTS += $(OBJDIR)/Mesh.o
OBJECTS += $(OBJDIR)/Model.o
OBJECTS += $(OBJDIR)/Monitor.o
OBJECTS += $(OBJDIR)/Program.o
OBJECTS += $(OBJDIR)/Renderer.o
OBJECTS += $(OBJDIR)/Shader.o
OBJECTS += $(OBJDIR)/Texture.o
OBJECTS += $(OBJDIR)/VKCommandBuffer.o
OBJECTS += $(OBJDIR)/VKCommandQueue.o
OBJECTS += $(OBJDIR)/VKRenderer.o
OBJECTS += $(OBJDIR)/VKShader.o
OBJECTS += $(OBJDIR)/VertexBuffer.o
OBJECTS += $(OBJDIR)/VertexFormat.o
OBJECTS += $(OBJDIR)/Window.o

# Rules
# #############################################

all: $(TARGET)
	@:

$(TARGET): $(GENERATED) $(OBJECTS) $(LDDEPS) | $(TARGETDIR)
	$(PRELINKCMDS)
	@echo Linking Graphics
	$(SILENT) $(LINKCMD)
	$(POSTBUILDCMDS)

$(TARGETDIR):
	@echo Creating $(TARGETDIR)
ifeq (posix,$(SHELLTYPE))
	$(SILENT) mkdir -p $(TARGETDIR)
else
	$(SILENT) mkdir $(subst /,\\,$(TARGETDIR))
endif

$(OBJDIR):
	@echo Creating $(OBJDIR)
ifeq (posix,$(SHELLTYPE))
	$(SILENT) mkdir -p $(OBJDIR)
else
	$(SILENT) mkdir $(subst /,\\,$(OBJDIR))
endif

clean:
	@echo Cleaning Graphics
ifeq (posix,$(SHELLTYPE))
	$(SILENT) rm -f  $(TARGET)
	$(SILENT) rm -rf $(GENERATED)
	$(SILENT) rm -rf $(OBJDIR)
else
	$(SILENT) if exist $(subst /,\\,$(TARGET)) del $(subst /,\\,$(TARGET))
	$(SILENT) if exist $(subst /,\\,$(GENERATED)) rmdir /s /q $(subst /,\\,$(GENERATED))
	$(SILENT) if exist $(subst /,\\,$(OBJDIR)) rmdir /s /q $(subst /,\\,$(OBJDIR))
endif

prebuild: | $(OBJDIR)
	$(PREBUILDCMDS)

ifneq (,$(PCH))
$(OBJECTS): $(GCH) | $(PCH_PLACEHOLDER)
$(GCH): $(PCH) | prebuild
	@echo $(notdir $<)
	$(SILENT) $(CXX) -x c++-header $(ALL_CXXFLAGS) -o "$@" -MF "$(@:%.gch=%.d)" -c "$<"
$(PCH_PLACEHOLDER): $(GCH) | $(OBJDIR)
ifeq (posix,$(SHELLTYPE))
	$(SILENT) touch "$@"
else
	$(SILENT) echo $null >> "$@"
endif
else
$(OBJECTS): | prebuild
endif


# File Rules
# #############################################

$(OBJDIR)/CommandBuffer.o: CommandBuffer.cpp
	@echo $(notdir $<)
	$(SILENT) $(CXX) $(ALL_CXXFLAGS) $(FORCE_INCLUDE) -o "$@" -MF "$(@:%.o=%.d)" -c "$<"
$(OBJDIR)/CommandQueue.o: CommandQueue.cpp
	@echo $(notdir $<)
	$(SILENT) $(CXX) $(ALL_CXXFLAGS) $(FORCE_INCLUDE) -o "$@" -MF "$(@:%.o=%.d)" -c "$<"
$(OBJDIR)/DDSLoader.o: Core/DDSLoader.cpp
	@echo $(notdir $<)
	$(SILENT) $(CXX) $(ALL_CXXFLAGS) $(FORCE_INCLUDE) -o "$@" -MF "$(@:%.o=%.d)" -c "$<"
$(OBJDIR)/Gamepad.o: Core/Gamepad.cpp
	@echo $(notdir $<)
	$(SILENT) $(CXX) $(ALL_CXXFLAGS) $(FORCE_INCLUDE) -o "$@" -MF "$(@:%.o=%.d)" -c "$<"
$(OBJDIR)/Image.o: Core/Image.cpp
	@echo $(notdir $<)
	$(SILENT) $(CXX) $(ALL_CXXFLAGS) $(FORCE_INCLUDE) -o "$@" -MF "$(@:%.o=%.d)" -c "$<"
$(OBJDIR)/Input.o: Core/Input.cpp
	@echo $(notdir $<)
	$(SILENT) $(CXX) $(ALL_CXXFLAGS) $(FORCE_INCLUDE) -o "$@" -MF "$(@:%.o=%.d)" -c "$<"
$(OBJDIR)/Monitor.o: Core/Monitor.cpp
	@echo $(notdir $<)
	$(SILENT) $(CXX) $(ALL_CXXFLAGS) $(FORCE_INCLUDE) -o "$@" -MF "$(@:%.o=%.d)" -c "$<"
$(OBJDIR)/Window.o: Core/Window.cpp
	@echo $(notdir $<)
	$(SILENT) $(CXX) $(ALL_CXXFLAGS) $(FORCE_INCLUDE) -o "$@" -MF "$(@:%.o=%.d)" -c "$<"
$(OBJDIR)/IndexBuffer.o: IndexBuffer.cpp
	@echo $(notdir $<)
	$(SILENT) $(CXX) $(ALL_CXXFLAGS) $(FORCE_INCLUDE) -o "$@" -MF "$(@:%.o=%.d)" -c "$<"
$(OBJDIR)/Material.o: Material.cpp
	@echo $(notdir $<)
	$(SILENT) $(CXX) $(ALL_CXXFLAGS) $(FORCE_INCLUDE) -o "$@" -MF "$(@:%.o=%.d)" -c "$<"
$(OBJDIR)/Mesh.o: Mesh.cpp
	@echo $(notdir $<)
	$(SILENT) $(CXX) $(ALL_CXXFLAGS) $(FORCE_INCLUDE) -o "$@" -MF "$(@:%.o=%.d)" -c "$<"
$(OBJDIR)/Model.o: Model.cpp
	@echo $(notdir $<)
	$(SILENT) $(CXX) $(ALL_CXXFLAGS) $(FORCE_INCLUDE) -o "$@" -MF "$(@:%.o=%.d)" -c "$<"
$(OBJDIR)/GLCheck.o: OpenGL/GLCheck.cpp
	@echo $(notdir $<)
	$(SILENT) $(CXX) $(ALL_CXXFLAGS) $(FORCE_INCLUDE) -o "$@" -MF "$(@:%.o=%.d)" -c "$<"
$(OBJDIR)/GLCommandBuffer.o: OpenGL/GLCommandBuffer.cpp
	@echo $(notdir $<)
	$(SILENT) $(CXX) $(ALL_CXXFLAGS) $(FORCE_INCLUDE) -o "$@" -MF "$(@:%.o=%.d)" -c "$<"
$(OBJDIR)/GLCommandQueue.o: OpenGL/GLCommandQueue.cpp
	@echo $(notdir $<)
	$(SILENT) $(CXX) $(ALL_CXXFLAGS) $(FORCE_INCLUDE) -o "$@" -MF "$(@:%.o=%.d)" -c "$<"
$(OBJDIR)/GLIndexBuffer.o: OpenGL/GLIndexBuffer.cpp
	@echo $(notdir $<)
	$(SILENT) $(CXX) $(ALL_CXXFLAGS) $(FORCE_INCLUDE) -o "$@" -MF "$(@:%.o=%.d)" -c "$<"
$(OBJDIR)/GLProgram.o: OpenGL/GLProgram.cpp
	@echo $(notdir $<)
	$(SILENT) $(CXX) $(ALL_CXXFLAGS) $(FORCE_INCLUDE) -o "$@" -MF "$(@:%.o=%.d)" -c "$<"
$(OBJDIR)/GLRenderer.o: OpenGL/GLRenderer.cpp
	@echo $(notdir $<)
	$(SILENT) $(CXX) $(ALL_CXXFLAGS) $(FORCE_INCLUDE) -o "$@" -MF "$(@:%.o=%.d)" -c "$<"
$(OBJDIR)/GLShader.o: OpenGL/GLShader.cpp
	@echo $(notdir $<)
	$(SILENT) $(CXX) $(ALL_CXXFLAGS) $(FORCE_INCLUDE) -o "$@" -MF "$(@:%.o=%.d)" -c "$<"
$(OBJDIR)/GLTexture.o: OpenGL/GLTexture.cpp
	@echo $(notdir $<)
	$(SILENT) $(CXX) $(ALL_CXXFLAGS) $(FORCE_INCLUDE) -o "$@" -MF "$(@:%.o=%.d)" -c "$<"
$(OBJDIR)/GLVertexArray.o: OpenGL/GLVertexArray.cpp
	@echo $(notdir $<)
	$(SILENT) $(CXX) $(ALL_CXXFLAGS) $(FORCE_INCLUDE) -o "$@" -MF "$(@:%.o=%.d)" -c "$<"
$(OBJDIR)/GLVertexBuffer.o: OpenGL/GLVertexBuffer.cpp
	@echo $(notdir $<)
	$(SILENT) $(CXX) $(ALL_CXXFLAGS) $(FORCE_INCLUDE) -o "$@" -MF "$(@:%.o=%.d)" -c "$<"
$(OBJDIR)/Program.o: Program.cpp
	@echo $(notdir $<)
	$(SILENT) $(CXX) $(ALL_CXXFLAGS) $(FORCE_INCLUDE) -o "$@" -MF "$(@:%.o=%.d)" -c "$<"
$(OBJDIR)/Renderer.o: Renderer.cpp
	@echo $(notdir $<)
	$(SILENT) $(CXX) $(ALL_CXXFLAGS) $(FORCE_INCLUDE) -o "$@" -MF "$(@:%.o=%.d)" -c "$<"
$(OBJDIR)/Shader.o: Shader.cpp
	@echo $(notdir $<)
	$(SILENT) $(CXX) $(ALL_CXXFLAGS) $(FORCE_INCLUDE) -o "$@" -MF "$(@:%.o=%.d)" -c "$<"
$(OBJDIR)/Texture.o: Texture.cpp
	@echo $(notdir $<)
	$(SILENT) $(CXX) $(ALL_CXXFLAGS) $(FORCE_INCLUDE) -o "$@" -MF "$(@:%.o=%.d)" -c "$<"
$(OBJDIR)/VertexBuffer.o: VertexBuffer.cpp
	@echo $(notdir $<)
	$(SILENT) $(CXX) $(ALL_CXXFLAGS) $(FORCE_INCLUDE) -o "$@" -MF "$(@:%.o=%.d)" -c "$<"
$(OBJDIR)/VertexFormat.o: VertexFormat.cpp
	@echo $(notdir $<)
	$(SILENT) $(CXX) $(ALL_CXXFLAGS) $(FORCE_INCLUDE) -o "$@" -MF "$(@:%.o=%.d)" -c "$<"
$(OBJDIR)/VKCommandBuffer.o: Vulkan/VKCommandBuffer.cpp
	@echo $(notdir $<)
	$(SILENT) $(CXX) $(ALL_CXXFLAGS) $(FORCE_INCLUDE) -o "$@" -MF "$(@:%.o=%.d)" -c "$<"
$(OBJDIR)/VKCommandQueue.o: Vulkan/VKCommandQueue.cpp
	@echo $(notdir $<)
	$(SILENT) $(CXX) $(ALL_CXXFLAGS) $(FORCE_INCLUDE) -o "$@" -MF "$(@:%.o=%.d)" -c "$<"
$(OBJDIR)/VKRenderer.o: Vulkan/VKRenderer.cpp
	@echo $(notdir $<)
	$(SILENT) $(CXX) $(ALL_CXXFLAGS) $(FORCE_INCLUDE) -o "$@" -MF "$(@:%.o=%.d)" -c "$<"
$(OBJDIR)/VKShader.o: Vulkan/VKShader.cpp
	@echo $(notdir $<)
	$(SILENT) $(CXX) $(ALL_CXXFLAGS) $(FORCE_INCLUDE) -o "$@" -MF "$(@:%.o=%.d)" -c "$<"

-include $(OBJECTS:%.o=%.d)
ifneq (,$(PCH))
  -include $(PCH_PLACEHOLDER).d
endif